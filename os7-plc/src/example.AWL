FUNCTION_BLOCK "BOOLEAN_IN"
TITLE =class BooleanInput
VERSION : 0.1


VAR
  VALUE : BOOL ;	
  OLD_VALUE : BOOL ;	
  GET : BOOL ;	//Boolean get()
  ON_CHANGE : BOOL ;	//void onValueChanged(Callback<T> callback)
  ON_POS_EDGE : BOOL ;	//void onPositiveEdge(Runnable callback) 
  ON_NEG_EDGE : BOOL ;	//void onNegativeEdge(Runnable callback) 
END_VAR
BEGIN
NETWORK
TITLE =Implementation: get()

      A     #VALUE; 
      =     #GET; 


NETWORK
TITLE =Implementation: onValueChanged(Callback<T> callback)

      A(    ; 
      A     #VALUE; 
      AN    #OLD_VALUE; 
      )     ; 
      O(    ; 
      AN    #VALUE; 
      A     #OLD_VALUE; 
      )     ; 
      =     #ON_CHANGE; 

NETWORK
TITLE =Implementation: void onPositiveEdge(Runnable callback) 

      A     #VALUE; 
      AN    #OLD_VALUE; 
      =     #ON_POS_EDGE; 

NETWORK
TITLE =Implementation: void onNegativeEdge(Runnable callback) 

      AN    #VALUE; 
      A     #OLD_VALUE; 
      =     #ON_NEG_EDGE; 

NETWORK
TITLE =Implementation: old value

      A     #VALUE; 
      =     #OLD_VALUE; 


END_FUNCTION_BLOCK

FUNCTION_BLOCK "BOOLEAN_OUT"
TITLE =
VERSION : 0.1


VAR
  VALUE : BOOL ;	
  SET : BOOL ;	//call method: void set(Boolean value)
  SET_VALUE : BOOL ;	//method param: Boolean value
END_VAR
BEGIN
NETWORK
TITLE =Implementation: set()

      A     #SET; 
      A     #SET_VALUE; 
      S     #VALUE; 

      A     #SET; 
      AN    #SET_VALUE; 
      R     #VALUE; 
END_FUNCTION_BLOCK

FUNCTION_BLOCK "EX_ACT_INTERFACE"
TITLE =
VERSION : 0.1


VAR
  MIN_POS : "BOOLEAN_IN";	
  MAX_POS : "BOOLEAN_IN";	
  MOV_LOCK : "BOOLEAN_IN";	
  FORWARD_MOV : "BOOLEAN_OUT";	
  BACKWARD_MOV : "BOOLEAN_OUT";	
END_VAR
BEGIN
NETWORK
TITLE =BooleanInput minPosition

      CALL #MIN_POS ;
      CALL #MAX_POS ;
      CALL #MOV_LOCK ;
      CALL #FORWARD_MOV ;
      CALL #BACKWARD_MOV ;

END_FUNCTION_BLOCK

DATA_BLOCK "EX_ACT_INTERFACE_DB"
TITLE =
VERSION : 0.0

"EX_ACT_INTERFACE"
BEGIN
   MIN_POS.VALUE := FALSE; 
   MIN_POS.OLD_VALUE := FALSE; 
   MIN_POS.GET := FALSE; 
   MIN_POS.ON_CHANGE := FALSE; 
   MIN_POS.ON_POS_EDGE := FALSE; 
   MIN_POS.ON_NEG_EDGE := FALSE; 
   MAX_POS.VALUE := FALSE; 
   MAX_POS.OLD_VALUE := FALSE; 
   MAX_POS.GET := FALSE; 
   MAX_POS.ON_CHANGE := FALSE; 
   MAX_POS.ON_POS_EDGE := FALSE; 
   MAX_POS.ON_NEG_EDGE := FALSE; 
   MOV_LOCK.VALUE := FALSE; 
   MOV_LOCK.OLD_VALUE := FALSE; 
   MOV_LOCK.GET := FALSE; 
   MOV_LOCK.ON_CHANGE := FALSE; 
   MOV_LOCK.ON_POS_EDGE := FALSE; 
   MOV_LOCK.ON_NEG_EDGE := FALSE; 
   FORWARD_MOV.VALUE := FALSE; 
   FORWARD_MOV.SET := FALSE; 
   FORWARD_MOV.SET_VALUE := FALSE; 
   BACKWARD_MOV.VALUE := FALSE; 
   BACKWARD_MOV.SET := FALSE; 
   BACKWARD_MOV.SET_VALUE := FALSE; 
END_DATA_BLOCK

FUNCTION "INPUTS" : VOID
TITLE =
VERSION : 0.1

BEGIN
NETWORK
TITLE =Writing inputs into objects values

      A     I     10.0; 
      =     "EX_ACT_INTERFACE_DB".MIN_POS.VALUE; 
      A     I     10.1; 
      =     "EX_ACT_INTERFACE_DB".MAX_POS.VALUE; 
      A     I     10.2; 
      =     "EX_ACT_INTERFACE_DB".MOV_LOCK.VALUE; 

END_FUNCTION

FUNCTION "OUTPUTS" : VOID
TITLE =
VERSION : 0.1

BEGIN
NETWORK
TITLE =Writing objects values into outputs

      A     "EX_ACT_INTERFACE_DB".FORWARD_MOV.VALUE; 
      =     Q     10.0; 
      A     "EX_ACT_INTERFACE_DB".BACKWARD_MOV.VALUE; 
      =     Q     10.1; 


END_FUNCTION

ORGANIZATION_BLOCK OB 1
TITLE = "Main Program Sweep (Cycle)"
VERSION : 0.1


VAR_TEMP
  OB1_EV_CLASS : BYTE ;	//Bits 0-3 = 1 (Coming event), Bits 4-7 = 1 (Event class 1)
  OB1_SCAN_1 : BYTE ;	//1 (Cold restart scan 1 of OB 1), 3 (Scan 2-n of OB 1)
  OB1_PRIORITY : BYTE ;	//Priority of OB Execution
  OB1_OB_NUMBR : BYTE ;	//1 (Organization block 1, OB1)
  OB1_RESERVED_1 : BYTE ;	//Reserved for system
  OB1_RESERVED_2 : BYTE ;	//Reserved for system
  OB1_PREV_CYCLE : INT ;	//Cycle time of previous OB1 scan (milliseconds)
  OB1_MIN_CYCLE : INT ;	//Minimum cycle time of OB1 (milliseconds)
  OB1_MAX_CYCLE : INT ;	//Maximum cycle time of OB1 (milliseconds)
  OB1_DATE_TIME : DATE_AND_TIME ;	//Date and time OB1 started
END_VAR
BEGIN
NETWORK
TITLE =Rewriting Inputs

      CALL "INPUTS" ;

NETWORK
TITLE =Implementation: Inputs

      CALL "EX_ACT_INTERFACE" , "EX_ACT_INTERFACE_DB" ;


NETWORK
TITLE =Rewriting Outputs

      CALL "OUTPUTS" ;

END_ORGANIZATION_BLOCK

